#!/usr/bin/env bash

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"
  source normalize

  local nm_profile
  local nm_user

  if [[ -n "${1:-}" ]]; then
    case "$1" in
      *@*)
        nm_user="${1%%@*}"
        nm_profile="${1##*@}"
        shift
        ;;
      *)
        nm_profile="$1"; shift
        ;;
    esac
  fi

  if [[ -z "${nm_user:-}" ]]; then
    nm_user="$(cat "${BOARD_PATH}/.aws/assume" | jq -r --arg vault "$nm_profile" '.[$vault].mfa | split("/")[-1]')"
  fi

  if [[ "$#" == 0 ]]; then
    set -- bash -l
  fi

  export AWS_SESSION_EXPIRATION="$(date -d "1 hour" -u +"%Y-%m-%dT%H:%M:%SZ")"

  export CONTEXT_ORG="$nm_profile"
  unset AWS_SESSION_TOKEN AWS_VAULT AWS_SECRET_ACCESS_KEY AWS_ACCESS_KEY_ID AWS_SECURITY_TOKEN
  
  local code=

  if ! aws-vault list --sessions | egrep "^${CONTEXT_ORG} session" >/dev/null; then
    echo "getting aws-vault totp code..." 1>&2
    code="$("$CONTEXT_ORG" code)"
  fi

  local tmp_env="$(mktemp -t XXXXXX)"
  trap "$(printf 'rm -f %q' "$tmp_env")" EXIT
  export AWS_REGION="${AWS_REGION:-${AWS_DEFAULT_REGION:-us-east-1}}"
  case "${DISTRIB_ID}" in
    Darwin)
      ;;
    *)
      if tty >/dev/null; then
        echo "enter aws-vault key password..." 1>&2
      fi
      ;;
  esac
  aws vault exec "$nm_profile" --assume-role-ttl=60m ${code:+-m "${code}"} -- env | grep ^AWS_ | sed 's#^#export #' > "$tmp_env"
  source "$tmp_env"
  rm -f "$tmp_env"

  exec "$@"
}

source sub "$BASH_SOURCE" "$@"
